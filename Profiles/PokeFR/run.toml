
name = "Pokemon FireRed"
version = "1.0.0"

[enum]

[enum.DialogueLinePercents.BlueGrey]
Line1_Start =   0.1696428571
Line1_End =     0.4151785714
Line2_Start =   0.5848214286
Line2_End =     0.8303571429

[enum.DialogueLinePercents.Fight]
Line1_Start =   0.1761904762
Line1_End =     0.4380952381
Line2_Start =   0.6523809524
Line2_End =     0.9142857143

[colors]

# Dark blue
[colors.DialogueBlue_Outer_V]
color       = { r = 72, g = 112, b = 160 }
tolerance   = 0
pureReq     = true

# Light blue
[colors.DialogueBlue_Inner_V]
color       = { r = 160, g = 208, b = 224 }
tolerance   = 0
pureReq     = true

# Light blue (same as Inner_V)
[colors.DialogueBlue_Outer_H]
color       = { r = 160, g = 208, b = 224 }
tolerance   = 0
pureReq     = true

# Sort of grey color from the curve aliasing
[colors.DialogueBlue_Inner_H]
color       = { r = 208, g = 224, b = 240 }
tolerance   = 0
pureReq     = true

[colors.DialogueBlue_Body]
color       = { r = 248, g = 248, b = 248 }
tolerance   = 0
pureReq     = false # Purity not required because of certainty of finding text pixels

[colors.RedArrow_BlueGrey_Background]
color       = { r = 248, g = 248, b = 248 }
tolerance   = 0
pureReq     = true

[colors.RedArrow_BlueGrey_Inner]
color       = { r = 96, g = 96, b = 96 }
tolerance   = 0
pureReq     = true

[colors.RedArrow_BlueGrey_Body]
color       = { r = 224, g = 8, b = 8 }
tolerance   = 0
pureReq     = true




[initSequence]

[initSequence.1]
function = "chooseProfile"

[sequence]

[sequence.test]

[sequence.test.1]
function = "screenshot"

[sequence.test.2]
function = "makeNPArray"
image = ["run", ["sequence", "test", "1", "result"]]

[sequence.test.3]
function = "getPixelColumn_Percent"
image = ["run", ["sequence", "test", "2", "result"]]
percent = ["const", 0.5]

[sequence.test.4]
function = "pixelSequenceScan"
pixels = ["run", ["sequence", "test", "3", "result"]]
colors = ["colors", ["DialogueBlue_Outer_V", "DialogueBlue_Inner_V", "DialogueBlue_Body", "DialogueBlue_Inner_V", "DialogueBlue_Outer_V"]]
continue = ["run", ["sequence","test","4","result", 0]]

[sequence.test.5]
function = "getPixelRow_Absolute"
image = ["run", ["sequence", "test", "2", "result"]]
row = ["run", ["sequence", "test", "4", "result", 1, 2, "startPixel"]]

[sequence.test.6]
function = "pixelSequenceScan"
pixels = ["run", ["sequence", "test", "5", "result"]]
colors = ["colors", ["DialogueBlue_Outer_H", "DialogueBlue_Inner_H", "DialogueBlue_Body", "DialogueBlue_Inner_H", "DialogueBlue_Outer_H"]]
continue = ["run", ["sequence","test","6","result", 0]]

[sequence.test.7]
function = "flexCropImage"
image = ["run", ["sequence", "test", "1", "result"]]
left = ["run", ["sequence", "test", "6", "result", 1, 2, "startPixel"]]
top = ["run", ["sequence", "test", "4", "result", 1, 2, "startPixel"]]
right = ["run", ["sequence", "test", "6", "result", 1, 2, "endPixel"]]
bottom = ["run", ["sequence", "test", "4", "result", 1, 2, "endPixel"]]
horizontalCount = ["const", 3]

[sequence.test.8]
function = "mergeImages_Vertical"
images = ["run", ["sequence", "test", "7", "result"]]

[sequence.test.9]
function = "computeHash_DHash"
image = ["run", ["sequence", "test", "8", "result"]]
size = ["const", 36]

[sequence.test.10]
function = "computeHashFlatness"
hash = ["run", ["sequence", "test", "9", "result"]]
differenceTolerance = ["const", 5]
flatCountThreshold = ["const", 8]
continue = ["run", ["sequence", "test", "10", "result"]]

[sequence.test.saveImage]
function = "saveImage"
image = ["run", ["sequence", "test", "8", "result"]]
fileName = ["const", "testSave.png"]

[sequence.tbBlue]

# Get virtical pixel column in the middle of the screen
[sequence.tbBlue.1]
function = "getPixelColumn_Percent"

image = ["core", "screenShot_Whole_npArray"]
percent = ["const", 0.5] # Middle of screen
percentLow = ["const", 0.5] # Lower half of screen
percentHigh = ["const", 1.0] # To bottom of screen

continue = ["const", true]

# Scan that pixel column for blue dialog box bounding frame colors
[sequence.tbBlue.2]
function = "pixelSequenceScan"

pixels = ["run", ["sequence","tbBlue",1,"result"]]
colors = ["color", ["DialogueBlue_Outer_V", "DialogueBlue_Inner_V", "DialogueBlue_Body", "DialogueBlue_Inner_V", "DialogueBlue_Outer_V"]]
continue = ["run", ["sequence","tbBlue",2,"result",0]]

[sequence.tbBlue.3]
function = "getPixelRow_Pixel"
image = ["core", "screenShot_Whole_npArray"]

# start pixel of Body color
# result contains (resultBool (success or failure), list[colorscanInstance)]
# result[1] points to the list[colorscanInstance)]
# result[1][2] points to the third colorscanInstance (body)
# result[1][2].startPixel points to the first pixel for detecting the textbox body
row = ["run", ["sequence","tbBlue",2,"result",1,2,"startPixel"]]
limitLowPercent = ["const", 0.0]
limitHighPercent = ["const", 1.0]

[sequence.tbBlue.4]
function = "pixelSequenceScan"
pixels = ["run", ["sequence","tbBlue",3,"result"]]
arguements.colors = ["DialogueBlue_Outer_H", "DialogueBlue_Inner_H", "DialogueBlue_Body", "DialogueBlue_Inner_H", "DialogueBlue_Outer_H"]
continue = ["run", ["sequence","tbBlue",4,"result",0]]

[sequence.tbBlue.5]
function = "getValue_PercentBetweenValues"
start = ["run", ["sequence","tbBlue",2,"result",1,2,"startPixel"]]
end = ["run", ["sequence","tbBlue",2,"result",1,2,"endPixel"]]
percent = ["run", ["enum","DialogueLinePercents","BlueGrey","Line1_Start"]]

[sequence.tbBlue.6]
function = "getValue_PercentBetweenValues"
start = ["run", ["sequence","tbBlue",2,"result",1,2,"startPixel"]]
end = ["run", ["sequence","tbBlue",2,"result",1,2,"endPixel"]]
percent = ["run", ["enum","DialogueLinePercents","BlueGrey","Line1_End"]]

[sequence.tbBlue.7]
function = "cropImage"
image = ["core", "screenShot_Whole_Image"]
left = ["run", ["sequence","tbBlue",4,"result",1,2,"startPixel"]] # Horizontal body startPixel
top = ["run", ["sequence","tbBlue",5,"result"]] # Line1_Start percent between top and bottom body edge
right = ["run", ["sequence","tbBlue",4,"result",1,2,"endPixel"]] # Horizontal body endPixel
bottom = ["run", ["sequence","tbBlue",6,"result"]] # Line1_End percent between top and bottom body edge
continue = ["const", true]

[sequence.tbBlue.8]
function = "getValue_PercentBetweenValues"
start = ["run", ["sequence","tbBlue",2,"result",1,2,"startPixel"]]
end = ["run", ["sequence","tbBlue",2,"result",1,2,"endPixel"]]
percent = ["run", ["enum","DialogueLinePercents","BlueGrey","Line2_Start"]]

[sequence.tbBlue.9]
function = "getValue_PercentBetweenValues"
start = ["run", ["sequence","tbBlue",2,"result",1,2,"startPixel"]]
end = ["run", ["sequence","tbBlue",2,"result",1,2,"endPixel"]]
percent = ["run", ["enum","DialogueLinePercents","BlueGrey","Line2_End"]]

[sequence.tbBlue.10]
function = "cropImage"

image = ["core", "screenShot_Whole_Image"]
left = ["run", ["sequence","tbBlue",4,"result",1,2,"startPixel"]] # Horizontal body startPixel
top = ["run", ["sequence","tbBlue",8,"result"]] # Line2_Start percent between top and bottom body edge
right = ["run", ["sequence","tbBlue",4,"result",1,2,"endPixel"]] # Horizontal body endPixel
bottom = ["run", ["sequence","tbBlue",9,"result"]] # Line2_End percent between top and bottom body edge

continue = ["const", true]

[sequence.tbBlue.11]
function = "mergeImages_Vertical"

imageTop = ["run", ["sequence","tbBlue",7,"result"]]
imageBottom = ["run", ["sequence","tbBlue",10,"result"]]

continue = ["const", true]

[sequence.tbBlue.12]
function = "saveImage"
image = ["run", ["sequence","tbBlue",11,"result"]]
fileName = ["const", "test.png"]
[hash]