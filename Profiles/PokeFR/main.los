
# This sequence scans for blue text boxes

# Colors

setup(

    blue_outer_v = Color(
        tolerance = 0,
        required = true,
        r = 72,
        g = 112,
        b = 160
    )

    
    blue_inner_v = Color(
        tolerance = 0,
        required = true,
        r = 160,
        g = 208,
        b = 224
    )

    
    blue_outer_h = Color(
        tolerance = 0,
        required = true,
        r = 160,
        g = 208,
        b = 224
    )

    
    blue_inner_h = Color(
        tolerance = 0,
        required = true,
        r = 208,
        g = 224,
        b = 240
    )

    
    blue_background = Color(
        tolerance = 0,
        required = false,
        r = 248,
        g = 248,
        b = 248
    )
)

# Sequence


s = screenshot()


s_np = make_np_array(s)

# Get middle column of pixels of numpy array image

pixel_column_middle = get_pixel_column_percent(
    image = s_np,
    percent = 0.5
)

# Scan for top, middle, and bottom of a blue textbox

scan_v_result = pixel_sequence_scan(
    pixels = pixel_column_middle,
    colors = [blue_outer_v, blue_inner_v, blue_background, blue_inner_v, blue_outer_v]
)

# If the blue dialogue top and bottom are not detected,
# Stop running this sequence
quit_if( !scan_v_result[0] )

scan_colors_v = scan_v_result[1]

# Get the row of pixels where the body of the dialogue box blue_background

# access blue_background color object from the vertical scan
_ = scan_colors_v[2]

# access the top pixel row of the background color

pixel_row_dialogue_top = _[start_pixel]

# Scan horizontally to get left and right edges of dialogue box
scan_h_result = pixel_sequence_scan(
    pixels = pixel_row_dialogue_top,
    colors = [blue_outer_h, blue_inner_h, blue_background, blue_inner_h, blue_outer_h]
)


quit_if( !scan_h_result[0] )

scan_colors_h = scan_h_result[1]

_ = scan_colors_v[2]

box_top = _[start_pixel]


_ = scan_colors_v[2]

box_bottom = _[end_pixel]


_ = scan_colors_h[2]

box_left = _[start_pixel]


_ = scan_colorsh[2]

box_right = _[end_pixel]

